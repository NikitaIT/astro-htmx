---
import ArchiveUI from "./archive_ui.astro";
import Rows from "./rows.astro";
import Layout from "../../layouts/Layout.astro";
import { Archiver, Contact } from "../../contacts_model";
type Props = {
  archiver: Parameters<typeof ArchiveUI>[0]["archiver"];
  contacts: Parameters<typeof Rows>[0]["contacts"];
};
let { archiver, contacts } = Astro.props;

const { request, url } = Astro;

const isPartialSearch = request.headers.get("HX-Trigger") === "search";

switch (Astro.request.method) {
  // @app.route("/contacts/", methods=["DELETE"])
  case "DELETE": {
    const formData = await request.formData();
    const contact_ids = formData
      .getAll("selected_contact_ids")
      .map((id) => Number.parseInt(id.toString(), 10))
      .forEach((contact_id) => {
        const contact = Contact.find(contact_id);
        contact?.delete();
      });
    // flash("Deleted Contacts!");
    contacts = Contact.all(1);
  }
  case "GET": {
    const search = url.searchParams.get("q");
    const page = Number.parseInt(url.searchParams.get("page") ?? "1", 10);

    if (search) {
      contacts = Contact.search(search);
    } else {
      contacts = Contact.all();
    }

    if (!isPartialSearch) {
      archiver = Archiver.get();
    }
    break;
  }
}

export const prerender = false;
export const partial = true;
---

{
  isPartialSearch ? (
    <Rows contacts={contacts} />
  ) : (
    <Layout>
      <ArchiveUI archiver={archiver} />
      <form action="/contacts" method="get" class="tool-bar">
        <label for="search">Search Term</label>
        <input
          id="search"
          type="search"
          name="q"
          value={url.searchParams.get("q") ?? ""}
          hx-get="/contacts"
          hx-trigger="search, keyup delay:200ms changed"
          hx-target="tbody"
          hx-push-url="true"
          hx-indicator="#spinner"
        />
        <img
          style="height: 20px"
          id="spinner"
          class="htmx-indicator"
          src="/static/img/spinning-circles.svg"
        />
        <input type="submit" value="Search" />
      </form>

      <form x-data="{ selected: [] }">
        <template x-if="selected.length > 0">
          <div class="box info tool-bar flxed top">
            <slot x-text="selected.length" />
            contacts selected
            <button
              type="button"
              class="bad bg color border"
              @click="confirm(`Delete ${selected.length} contacts?`) && htmx.ajax('DELETE', '/contacts', { source: $root, target: document.body })"
            >
              Delete
            </button>
            <hr aria-orientation="vertical" />
            <button type="button" @click="selected = []">
              Cancel
            </button>
          </div>
        </template>
        <table>
          <thead>
            <tr>
              <th />
              <th>First</th>
              <th>Last</th>
              <th>Phone</th>
              <th>Email</th>
              <th />
            </tr>
          </thead>
          <tbody>
            <Rows contacts={contacts} />
          </tbody>
        </table>
        <button
          hx-delete="/contacts"
          hx-confirm="Are you sure you want to delete these contacts?"
          hx-target="body"
        >
          Delete Selected Contacts
        </button>
      </form>
      <p>
        <a href="/contacts/new">Add Contact</a>
        <span hx-get="/contacts/count" hx-trigger="revealed">
          <img
            id="spinner"
            style="height: 20px"
            class="htmx-indicator"
            src="/static/img/spinning-circles.svg"
          />
        </span>
      </p>
    </Layout>
  )
}
